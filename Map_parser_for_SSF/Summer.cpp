
#include "stdafx.h"

#include "Summer.h"
#include "util.h"

// 429 elements. Map tile has two bytes. Perform: g_summer_tiles[tile_val & 0x1FF] to get needed editor first two bytes
// 0x0F mask is for landscape type
// 0xF0 mask is for tile num
// 0xFF mask is for tile type
static const std::vector<uint16_t> g_summer_tiles =
{
	  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
	, 0x0000, 0x0000, 0x0710, 0x0110, 0x0511, 0x0311, 0x0a11, 0x0b10, 0x0911, 0x0c11, 0x0210, 0x0411, 0x0810, 0x0610, 0x0011, 0x0011
	, 0x0011, 0x0011, 0x0011, 0x0011, 0x0011, 0x0011, 0x0011, 0x0022, 0x0022, 0x0022, 0x0322, 0x0120, 0x0522, 0x0720, 0x0a22, 0x0c22
	, 0x0b20, 0x0922, 0x0220, 0x0620, 0x0422, 0x0820, 0x0022, 0x0022, 0x0022, 0x0022, 0x0022, 0x0022, 0x0022, 0x0322, 0x0120, 0x0522
	, 0x0720, 0x0a22, 0x0c22, 0x0b20, 0x0922, 0x0220, 0x0620, 0x0422, 0x0820, 0x0322, 0x0120, 0x0522, 0x0720, 0x0a22, 0x0c22, 0x0b20
	, 0x0922, 0x0220, 0x0620, 0x0422, 0x0820, 0x0322, 0x0120, 0x0522, 0x0720, 0x0a22, 0x0c22, 0x0b20, 0x0922, 0x0220, 0x0620, 0x0422
	, 0x0820, 0x0130, 0x0130, 0x0533, 0x0730, 0x0a33, 0x0c33, 0x0b30, 0x0933, 0x0230, 0x0630, 0x0433, 0x0830, 0x0333, 0x0130, 0x0533
	, 0x0730, 0x0a33, 0x0c33, 0x0b30, 0x0933, 0x0230, 0x0630, 0x0433, 0x0830, 0x0333, 0x0130, 0x0533, 0x0730, 0x0a33, 0x0c33, 0x0b30
	, 0x0933, 0x0230, 0x0630, 0x0433, 0x0830, 0x0333, 0x0130, 0x0533, 0x0730, 0x0a33, 0x0c33, 0x0b30, 0x0933, 0x0230, 0x0630, 0x0433
	, 0x0830, 0x0333, 0x0130, 0x0533, 0x0730, 0x0a33, 0x0c33, 0x0b30, 0x0933, 0x0230, 0x0630, 0x0433, 0x0830, 0x0033, 0x0033, 0x0033
	, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033, 0x0033
	, 0x0033, 0x0344, 0x0544, 0x0140, 0x0740, 0x0240, 0x0444, 0x0840, 0x0640, 0x0a44, 0x0b40, 0x0944, 0x0c44, 0x0044, 0x0044, 0x0044
	, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0055, 0x0055, 0x0055, 0x0055, 0x0055, 0x0055, 0x0055
	, 0x0055, 0x0055, 0x0355, 0x0154, 0x0555, 0x0754, 0x0a55, 0x0c55, 0x0b54, 0x0955, 0x0254, 0x0654, 0x0455, 0x0854, 0x0355, 0x0154
	, 0x0555, 0x0754, 0x0a55, 0x0c55, 0x0b54, 0x0955, 0x0254, 0x0654, 0x0455, 0x0854, 0x0355, 0x0154, 0x0555, 0x0754, 0x0a55, 0x0c55
	, 0x0b54, 0x0955, 0x0254, 0x0654, 0x0455, 0x0854, 0x0355, 0x0154, 0x0555, 0x0754, 0x0a55, 0x0c55, 0x0b54, 0x0955, 0x0254, 0x0654
	, 0x0455, 0x0854, 0x0355, 0x0154, 0x0555, 0x0754, 0x0a55, 0x0c55, 0x0b54, 0x0955, 0x0254, 0x0654, 0x0455, 0x0854, 0xffff, 0x0160
	, 0x0566, 0x0760, 0x0a66, 0x0c66, 0x0b60, 0x0966, 0x0260, 0x0660, 0x0466, 0x0860, 0x0366, 0x0160, 0x0566, 0x0760, 0x0a66, 0x0c66
	, 0x0b60, 0x0966, 0x0260, 0x0660, 0x0466, 0x0860, 0x0366, 0x0160, 0x0566, 0x0760, 0x0a66, 0x0c66, 0x0b60, 0x0966, 0x0260, 0x0660
	, 0x0466, 0x0860, 0x0366, 0x0160, 0x0566, 0x0760, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x0066, 0x0a66, 0x0c66
	, 0x0b60, 0x0966, 0x0260, 0x0660, 0x0466, 0x0860, 0x0366, 0x0160, 0x0566, 0x0760, 0x0a66, 0x0c66, 0x0b60, 0x0966, 0x0260, 0x0660
	, 0x0466, 0x0860, 0x0366, 0x0160, 0x0566, 0x0760, 0x0a66, 0x0c66, 0x0b60, 0x0966, 0x0260, 0x0660, 0x0466, 0x0860, 0x0160, 0x0566
	, 0x0760, 0x0a66, 0x0c66, 0x0b60, 0x0260, 0x0660, 0x0860, 0x0366, 0x0160, 0x0566, 0x0a66, 0x0c66, 0x0b60, 0x0966, 0x0260, 0x0660
	, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0077, 0x0377, 0x0170, 0x0577, 0x0770
	, 0x0a77, 0x0c77, 0x0b70, 0x0977, 0x0270, 0x0670, 0x0477, 0x0870, 0x0377, 0x0170, 0x0577, 0x0770, 0x0a77, 0x0c77, 0x0b70, 0x0977
	, 0x0270, 0x0670, 0x0477, 0x0870, 0x0377, 0x0170, 0x0577, 0x0770, 0x0a77, 0x0c77, 0x0b70, 0x0977, 0x0270, 0x0670, 0x0477, 0x0870
	, 0x0377, 0x0170, 0x0577, 0x0770, 0x0a77, 0x0c77, 0x0b70, 0x0977, 0x0270, 0x0670, 0x0477, 0x0870, 0x0077
};

static const std::vector<uint8_t> g_summer_B14 =
{
	  0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x47, 0x72, 0x61, 0x73
	, 0x73, 0x2d, 0x32, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00
	, 0x12, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
	, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa2, 0x34, 0x00, 0x00
	, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04
	, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0xe3, 0x18, 0x00, 0x00, 0x53, 0x77, 0x61, 0x6d, 0x70, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x06, 0x05, 0x04
	, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x83, 0x31, 0x00, 0x00, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x00
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x47, 0x72, 0x6f, 0x75
	, 0x6e, 0x64, 0x32, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0x04, 0x00, 0x00, 0x00
	, 0xc9, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x09, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05
	, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xa3, 0x00, 0x00
	, 0x57, 0x61, 0x74, 0x65, 0x72, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x06, 0x06, 0x08, 0x08, 0x07
	, 0x07, 0x07, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x12, 0x00, 0x00, 0x00, 0x53, 0x61, 0x6e, 0x64, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x04, 0x04, 0x04
	, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x20, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xad, 0x01, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const std::vector<uint8_t> g_summer_B00 =
{ 
	  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x04, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00
	, 0x47, 0x72, 0x61, 0x73, 0x73, 0x2d, 0x32, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
	, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0xa2, 0x34, 0x00, 0x00, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x04, 0x04, 0x04
	, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x18, 0x00, 0x00, 0x53, 0x77, 0x61, 0x6d, 0x70, 0x00, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x14, 0x06, 0x05, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x31, 0x00, 0x00, 0x47, 0x72, 0x6f, 0x75
	, 0x6e, 0x64, 0x31, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00
	, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
	, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00
	, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0x04, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x04, 0x04
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05
	, 0x05, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0xc8, 0xa3, 0x00, 0x00, 0x57, 0x61, 0x74, 0x65, 0x72, 0x00, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x06
	, 0x06, 0x08, 0x08, 0x07, 0x07, 0x07, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x53, 0x61, 0x6e, 0x64, 0x00, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd
	, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x0d, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0xad, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const std::vector<uint8_t> g_summer_420 =
{
	  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x07, 0x01, 0x05, 0x03, 0x0a, 0x0b, 0x09, 0x0c, 0x02, 0x04, 0x08, 0x06, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c
	, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x05
	, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b
	, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04
	, 0x08, 0x01, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05
	, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b
	, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04
	, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x03, 0x05, 0x01, 0x07, 0x02, 0x04, 0x08, 0x06, 0x0a, 0x0b, 0x09, 0x0c, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01
	, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c
	, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06
	, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0xc4, 0x01
	, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c
	, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06
	, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x0c
	, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06
	, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x01, 0x05
	, 0x07, 0x0a, 0x0c, 0x0b, 0x02, 0x06, 0x08, 0x03, 0x01, 0x05, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x05, 0x07
	, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09
	, 0x02, 0x06, 0x04, 0x08, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08
	, 0x03, 0x01, 0x05, 0x07, 0x0a, 0x0c, 0x0b, 0x09, 0x02, 0x06, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static uint32_t get_rand()
{
	static uint32_t res = 1;
	res = 0x343FD * res + 0x269EC3;

	return HIWORD(res) & 0x7FFF;
}

void summerrhombs(const std::string_view& map_rhombs, std::ofstream& outputFile)
{
	std::map<uint16_t, uint32_t> m;
	const size_t length = map_rhombs.size();
	std::vector<uint8_t> v(length * 2, 0);

	for (size_t offset = 0, vOffset = 0; offset < length; offset += 2, vOffset += 4)
	{
		// full value:		1111'1111  1111'1111  1111'1111 1111'1111
		// landscape type:	1111'0000
		// value for neigh: 0000'1111
		// value for neigh:			   1111'0000
		// bright level:			   0000'1111  1111'1000
		//

		const uint8_t num1 = map_rhombs[offset];
		const uint8_t num2 = map_rhombs[offset + 1];

		size_t map_tile_bytes = MAKEWORD(num1, num2) & 0x1FF;
		if (map_tile_bytes >= g_summer_tiles.size())
			map_tile_bytes = 0;
		const uint16_t first_two_bytes = g_summer_tiles[map_tile_bytes];
		if (first_two_bytes == 0xFFFF)
		{
			std::println("\033[31m[Error]\033[0m Wow, you found an impossible tile combination! Unfortunately, file 'rhombs' will not be created. Please send this map to the developer! (t.me/ss_hd_mod)");
			return;
		}

		//const uint8_t Tile_num = LOBYTE(first_two_bytes);
		//const uint8_t Tile_type = HIBYTE(first_two_bytes);
		const uint8_t Tile_bright = num2 / 8;

		//v[vOffset] = Tile_num;
		//v[vOffset + 1] = Tile_type;
		//v[vOffset + 2] = Tile_bright;

		uint32_t tile_value = MAKELONG(first_two_bytes, Tile_bright);

		const uint8_t v3 = g_summer_B14[0x54 * ((tile_value >> 4) & 0xF) + ((tile_value >> 8) & 0xF)];
		const uint32_t rand_value = get_rand();
		uint32_t v5 = g_summer_B00[0x54 * ((tile_value >> 4) & 0xF)];
		uint32_t v6 = v3 * rand_value / 0x8000;
		const uint32_t v7 = (tile_value >> 8) & 0xF;
		while (true)
		{
			for (; g_summer_420[v5] != v7; ++v5);

			if (!v6)
				break;

			--v6;
			++v5;
		}

		tile_value = (v5 << 21) ^ (tile_value ^ (v5 << 21)) & 0x1FFFFF;

		*(uint32_t*)(v.data() + vOffset) = tile_value;
	}

	outputFile.write((char*)v.data(), v.size());
}
